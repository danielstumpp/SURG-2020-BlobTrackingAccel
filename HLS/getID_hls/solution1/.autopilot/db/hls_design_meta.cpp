#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("eventX", 32, hls_in, 31, "ap_none", "in_data", 1),
	Port_Property("eventY", 32, hls_in, 32, "ap_none", "in_data", 1),
	Port_Property("newFlow_address0", 1, hls_out, 33, "ap_memory", "mem_address", 1),
	Port_Property("newFlow_ce0", 1, hls_out, 33, "ap_memory", "mem_ce", 1),
	Port_Property("newFlow_q0", 64, hls_in, 33, "ap_memory", "mem_dout", 1),
	Port_Property("newFlow_address1", 1, hls_out, 33, "ap_memory", "MemPortADDR2", 1),
	Port_Property("newFlow_ce1", 1, hls_out, 33, "ap_memory", "MemPortCE2", 1),
	Port_Property("newFlow_q1", 64, hls_in, 33, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("maxProb", 64, hls_out, 34, "ap_vld", "out_data", 1),
	Port_Property("maxProb_ap_vld", 1, hls_out, 34, "ap_vld", "out_vld", 1),
	Port_Property("ap_return", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 12, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 12, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "getTrackerID_hw";
